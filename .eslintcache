[{"/home/ironman/WebstormProjects/hospital_react/src/index.js":"1","/home/ironman/WebstormProjects/hospital_react/src/reportWebVitals.js":"2","/home/ironman/WebstormProjects/hospital_react/src/App.js":"3","/home/ironman/WebstormProjects/hospital_react/src/fire.js":"4","/home/ironman/WebstormProjects/hospital_react/src/routes/AfterLoginRoute.js":"5","/home/ironman/WebstormProjects/hospital_react/src/routes/BeforeLoginRoute.js":"6","/home/ironman/WebstormProjects/hospital_react/src/components/notFound/NotFound.js":"7","/home/ironman/WebstormProjects/hospital_react/src/components/login/Login.js":"8","/home/ironman/WebstormProjects/hospital_react/src/components/login/ForgatePassword.js":"9","/home/ironman/WebstormProjects/hospital_react/src/components/login/CreateAccount.js":"10","/home/ironman/WebstormProjects/hospital_react/src/redux/actions/index.js":"11","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/index.js":"12","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/counter.js":"13","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLogged.js":"14","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLoading.js":"15","/home/ironman/WebstormProjects/hospital_react/src/components/database/index.js":"16","/home/ironman/WebstormProjects/hospital_react/src/components/home/index.js":"17","/home/ironman/WebstormProjects/hospital_react/src/utils/Loading.js":"18","/home/ironman/WebstormProjects/hospital_react/src/utils/IconView.js":"19","/home/ironman/WebstormProjects/hospital_react/src/components/searchDoc/index.js":"20","/home/ironman/WebstormProjects/hospital_react/src/components/searchAmbulance/index.js":"21","/home/ironman/WebstormProjects/hospital_react/src/components/adminProfile/index.js":"22","/home/ironman/WebstormProjects/hospital_react/src/components/diseasPrediction/index.js":"23","/home/ironman/WebstormProjects/hospital_react/src/components/expert/index.js":"24","/home/ironman/WebstormProjects/hospital_react/src/components/general/index.js":"25","/home/ironman/WebstormProjects/hospital_react/src/components/healthTips/index.js":"26","/home/ironman/WebstormProjects/hospital_react/src/components/coronaTest/index.js":"27","/home/ironman/WebstormProjects/hospital_react/src/routes/navLinks.js":"28"},{"size":820,"mtime":1607700967638,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1607060110431,"results":"31","hashOfConfig":"30"},{"size":2385,"mtime":1607758554681,"results":"32","hashOfConfig":"30"},{"size":583,"mtime":1607159243186,"results":"33","hashOfConfig":"30"},{"size":11467,"mtime":1607876315618,"results":"34","hashOfConfig":"30"},{"size":668,"mtime":1607534975488,"results":"35","hashOfConfig":"30"},{"size":84,"mtime":1607526990663,"results":"36","hashOfConfig":"30"},{"size":3844,"mtime":1607758611615,"results":"37","hashOfConfig":"30"},{"size":3187,"mtime":1607534978791,"results":"38","hashOfConfig":"30"},{"size":8857,"mtime":1607758684632,"results":"39","hashOfConfig":"30"},{"size":440,"mtime":1607696079635,"results":"40","hashOfConfig":"30"},{"size":282,"mtime":1607697011965,"results":"41","hashOfConfig":"30"},{"size":222,"mtime":1607157665990,"results":"42","hashOfConfig":"30"},{"size":213,"mtime":1607157600555,"results":"43","hashOfConfig":"30"},{"size":211,"mtime":1607697307689,"results":"44","hashOfConfig":"30"},{"size":894,"mtime":1607700167073,"results":"45","hashOfConfig":"30"},{"size":59,"mtime":1607872442073,"results":"46","hashOfConfig":"30"},{"size":149,"mtime":1607693835749,"results":"47","hashOfConfig":"30"},{"size":438,"mtime":1607758349684,"results":"48","hashOfConfig":"30"},{"size":69,"mtime":1607761562211,"results":"49","hashOfConfig":"30"},{"size":81,"mtime":1607761590740,"results":"50","hashOfConfig":"30"},{"size":75,"mtime":1607872381388,"results":"51","hashOfConfig":"30"},{"size":83,"mtime":1607761527102,"results":"52","hashOfConfig":"30"},{"size":63,"mtime":1607872904176,"results":"53","hashOfConfig":"30"},{"size":65,"mtime":1607872865848,"results":"54","hashOfConfig":"30"},{"size":71,"mtime":1607872787657,"results":"55","hashOfConfig":"30"},{"size":71,"mtime":1607872759678,"results":"56","hashOfConfig":"30"},{"size":1728,"mtime":1607875973825,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1i8sct3",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ironman/WebstormProjects/hospital_react/src/index.js",[],["121","122"],"/home/ironman/WebstormProjects/hospital_react/src/reportWebVitals.js",[],"/home/ironman/WebstormProjects/hospital_react/src/App.js",["123","124","125"],"// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import Details from \"./components/details/Details\";\n// import NotFound from \"./components/notFound/NotFound\";\n// import { createStore } from \"redux\";\n// import allReducer from \"./redux/reducers/\";\n// import { Provider } from \"react-redux\";\n// import { SnackbarProvider } from \"notistack\";\nimport LoadingView from \"./utils/Loading\";\n// import logged from \"./redux/reducers/isLogged\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { logIn, logOut, increase, decrease } from \"../../redux/actions\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"./fire\";\nimport AfterLoginRoute from \"./routes/AfterLoginRoute\";\nimport BeforeLoginRoute from \"./routes/BeforeLoginRoute\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startLoading, stopLoading } from \"./redux/actions\";\nimport IconView from \"./utils/IconView\";\n\n// const store = createStore(allReducer);\n\n// // Can still subscribe to the store\n// store.subscribe(() => console.log(store.getState()));\n\n// function App() {\n//   return (\n//     <Provider store={store}>\n//       <SnackbarProvider maxSnack={3}>\n//         <Router>\n//           <Switch>\n//             <Route component={Details} path=\"/Details\" />\n//             <Route component={Home} path=\"/\" exact />\n//             <Route component={NotFound} />\n//           </Switch>\n//         </Router>\n//       </SnackbarProvider>\n//     </Provider>\n//   );\n// }\nfunction App(props) {\n  const [isLoggedIn, setLoggedIn] = useState(0);\n  const isLoading = useSelector((state) => state.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      //stop loading\n      dispatch(stopLoading());\n      // route\n      if (user) {\n        let uid = user.uid;\n        console.log(`user logged in, user id: ${uid}`);\n        setLoggedIn(1);\n      } else {\n        console.log(\"user not logged in\");\n        setLoggedIn(-1);\n      }\n    });\n  }, []);\n\n  const renderRoute = () => {\n    switch (isLoggedIn) {\n      case 0:\n        return <IconView />;\n      case 1:\n        return <AfterLoginRoute />;\n      case -1:\n        return <BeforeLoginRoute />;\n    }\n  };\n\n  return (\n    <div>\n      {isLoading && <LoadingView />}\n      {renderRoute()}\n    </div>\n  );\n}\n\nexport default App;\n","/home/ironman/WebstormProjects/hospital_react/src/fire.js",[],"/home/ironman/WebstormProjects/hospital_react/src/routes/AfterLoginRoute.js",["126","127"],"/home/ironman/WebstormProjects/hospital_react/src/routes/BeforeLoginRoute.js",["128"],"import Login from \"../components/login/Login\";\nimport CreateAccount from \"../components/login/CreateAccount\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NotFound from \"../components/notFound/NotFound\";\nimport ForgatePassword from \"../components/login/ForgatePassword\";\n\nfunction BeforeLoginRoute() {\n  return (\n    <Router>\n      <Switch>\n        <Route component={CreateAccount} path=\"/signUp\" />\n        <Route component={ForgatePassword} path=\"/resetPass\" />\n        <Route component={Login} path=\"/\" exact />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default BeforeLoginRoute;\n","/home/ironman/WebstormProjects/hospital_react/src/components/notFound/NotFound.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/login/Login.js",["129"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../../fire\";\nimport { useState } from \"react\";\nimport { withSnackbar } from \"notistack\";\n\nfunction Login(props) {\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginCall = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        props.enqueueSnackbar(\"Login successfull\", {\n          variant: \"success\",\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        props.enqueueSnackbar(errorMessage, {\n          variant: \"error\",\n        });\n\n        props.enqueueSnackbar(\"Login failed\", {\n          variant: \"error\",\n        });\n      });\n  };\n\n  const validateInput = (e) => {\n    e.preventDefault();\n    if (!(email && password)) {\n      props.enqueueSnackbar(\"Please enter password and email\", {\n        variant: \"error\",\n      });\n    } else {\n      loginCall();\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            value={email}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            value={password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={validateInput}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/resetPass\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signUp\" variant=\"body2\">\n                Or Create new account\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nexport default withSnackbar(Login);\n","/home/ironman/WebstormProjects/hospital_react/src/components/login/ForgatePassword.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/login/CreateAccount.js",["130"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withSnackbar } from \"notistack\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n//firebase\nimport { signUp } from \"../database\";\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startLoading, stopLoading } from \"../../redux/actions\";\n\nfunction CreateAccount(props) {\n  const isLoading = useSelector((state) => state.isLoading);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [age, setAge] = React.useState(0);\n  const [gender, setGender] = React.useState(\"MALE\");\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [passwordAgain, setPasswordAgain] = React.useState(\"\");\n  const [termsAndCondition, setTermsAndCondition] = React.useState(false);\n\n  const createAccountCall = () => {\n    dispatch(startLoading());\n    signUp(\n      email,\n      password,\n      {\n        name,\n        email,\n        location,\n        age,\n        gender,\n        phoneNumber,\n      },\n      () => {\n        dispatch(stopLoading());\n        props.enqueueSnackbar(\"Created a new account!\", {\n          variant: \"success\",\n        });\n      },\n      (error) => {\n        props.enqueueSnackbar(error, {\n          variant: \"error\",\n        });\n      }\n    );\n  };\n\n  const validateInputs = (e) => {\n    e.preventDefault();\n    console.log(\n      ` name: ${name}\\n email: ${email}\\n loaction: ${location}\\n age: ${age}\\n gender: ${gender}\\n phoneNumber: ${phoneNumber}\\n password: ${password}\\n passwordAgain: ${passwordAgain}\\n terms & condi: ${termsAndCondition}`\n    );\n\n    if (!termsAndCondition) {\n      props.enqueueSnackbar(\n        \"You have to accept terms and condition in order to use our web\",\n        {\n          variant: \"error\",\n        }\n      );\n      return;\n    }\n\n    if (\n      name &&\n      email &&\n      location &&\n      age &&\n      gender &&\n      phoneNumber &&\n      password &&\n      passwordAgain\n    ) {\n      if (passwordAgain === password) {\n        createAccountCall();\n      } else {\n        props.enqueueSnackbar(\"Password didn't match up\", {\n          variant: \"success\",\n        });\n      }\n    } else {\n      props.enqueueSnackbar(\"Please enter everything\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Name\"\n                autoComplete=\"name\"\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n                value={name}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n                value={email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Location\"\n                onChange={(event) => {\n                  setLocation(event.target.value);\n                }}\n                value={location}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Age\"\n                type=\"number\"\n                onChange={(event) => {\n                  setAge(event.target.value);\n                }}\n                value={age}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                select\n                label=\"Gender\"\n                required\n                fullWidth\n                value={gender}\n                onChange={(event) => {\n                  setGender(event.target.value);\n                }}\n                helperText=\"Please select your \"\n              >\n                {genders.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}{\" \"}\n                  </MenuItem>\n                ))}{\" \"}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">+88</InputAdornment>\n                  ),\n                }}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Phone number\"\n                onChange={(event) => {\n                  setPhoneNumber(event.target.value);\n                }}\n                value={phoneNumber}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                value={password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                onChange={(event) => {\n                  setPasswordAgain(event.target.value);\n                }}\n                value={passwordAgain}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                required\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    checked={termsAndCondition}\n                    onChange={(event) => {\n                      setTermsAndCondition(event.target.checked);\n                    }}\n                  />\n                }\n                label=\"I agree all terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={validateInputs}\n          >\n            Create account\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Login\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst genders = [\n  {\n    value: \"MALE\",\n    label: \"male\",\n  },\n  {\n    value: \"FEMALE\",\n    label: \"female\",\n  },\n  {\n    value: \"OTHER\",\n    label: \"other\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default withSnackbar(CreateAccount);\n","/home/ironman/WebstormProjects/hospital_react/src/redux/actions/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/counter.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLogged.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLoading.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/database/index.js",["131"],"import firebase from \"../../fire\";\n//\nconst errorMessage = \"somthings wrong, try again!\";\nconst environment = \"dev\";\n// const environment = \"live\";\n\nexport const signUp = (email, password, values, then, errorCall) => {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then((user) => {\n      if (user) {\n        setupProfileVal(values, then);\n      } else {\n        errorCall(errorMessage);\n      }\n    })\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      errorCall(errorMessage);\n    });\n};\n\nexport const setupProfileVal = (values, then) => {\n  const uid = firebase.auth().currentUser.uid;\n  if (uid) {\n    firebase\n      .firestore()\n      .collection(\"root\")\n      .doc(environment)\n      .collection(\"users\")\n      .doc(uid)\n      .set(values)\n      .then(then);\n  } else {\n    then(errorMessage);\n  }\n};\n","/home/ironman/WebstormProjects/hospital_react/src/components/home/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/utils/Loading.js",[],"/home/ironman/WebstormProjects/hospital_react/src/utils/IconView.js",["132"],"export default function IconView() {\n  const centering = {\n    display: \"flex\",\n    justifyContent: \"center\" /* align horizontal */,\n    alignItems: \"center\" /* align vertical */,\n    height: \"95vh\",\n    width: \"100%\",\n  };\n  return (\n    <div style={centering}>\n      <img src=\"https://www.gstatic.com/devrel-devsite/prod/vf7e3a995d426e05d42b78fc7d21a14329a91016dc065dc22c480cc8f443ef33e/firebase/images/lockup.png\" />\n    </div>\n  );\n}\n","/home/ironman/WebstormProjects/hospital_react/src/components/searchDoc/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/searchAmbulance/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/adminProfile/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/diseasPrediction/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/expert/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/general/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/healthTips/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/coronaTest/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/routes/navLinks.js",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":17,"column":10,"nodeType":"140","messageId":"141","endLine":17,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":59,"column":6,"nodeType":"144","endLine":59,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":62,"column":5,"nodeType":"148","messageId":"149","endLine":69,"endColumn":6},{"ruleId":"138","severity":1,"message":"150","line":19,"column":8,"nodeType":"140","messageId":"141","endLine":19,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":108,"column":3,"nodeType":"153","messageId":"154","endLine":108,"endColumn":13},{"ruleId":"138","severity":1,"message":"155","line":3,"column":50,"nodeType":"140","messageId":"141","endLine":3,"endColumn":54},{"ruleId":"138","severity":1,"message":"156","line":32,"column":13,"nodeType":"140","messageId":"141","endLine":32,"endColumn":22},{"ruleId":"138","severity":1,"message":"157","line":24,"column":9,"nodeType":"140","messageId":"141","endLine":24,"endColumn":18},{"ruleId":"138","severity":1,"message":"156","line":19,"column":11,"nodeType":"140","messageId":"141","endLine":19,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":11,"column":7,"nodeType":"160","endLine":11,"endColumn":157},{"ruleId":"138","severity":1,"message":"161","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'startLoading' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["164"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'InboxIcon' is defined but never used.","no-dupe-keys","Duplicate key 'menuButton'.","ObjectExpression","unexpected","'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [dispatch]",{"range":"167","text":"168"},[2047,2049],"[dispatch]"]