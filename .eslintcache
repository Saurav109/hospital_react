[{"/home/ironman/WebstormProjects/hospital_react/src/index.js":"1","/home/ironman/WebstormProjects/hospital_react/src/reportWebVitals.js":"2","/home/ironman/WebstormProjects/hospital_react/src/App.js":"3","/home/ironman/WebstormProjects/hospital_react/src/fire.js":"4","/home/ironman/WebstormProjects/hospital_react/src/routes/AfterLoginRoute.js":"5","/home/ironman/WebstormProjects/hospital_react/src/routes/BeforeLoginRoute.js":"6","/home/ironman/WebstormProjects/hospital_react/src/components/notFound/NotFound.js":"7","/home/ironman/WebstormProjects/hospital_react/src/components/login/Login.js":"8","/home/ironman/WebstormProjects/hospital_react/src/components/login/ForgatePassword.js":"9","/home/ironman/WebstormProjects/hospital_react/src/components/login/CreateAccount.js":"10","/home/ironman/WebstormProjects/hospital_react/src/redux/actions/index.js":"11","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/index.js":"12","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/counter.js":"13","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLogged.js":"14","/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLoading.js":"15","/home/ironman/WebstormProjects/hospital_react/src/components/database/index.js":"16","/home/ironman/WebstormProjects/hospital_react/src/components/home/index.js":"17","/home/ironman/WebstormProjects/hospital_react/src/utils/Loading.js":"18","/home/ironman/WebstormProjects/hospital_react/src/utils/IconView.js":"19","/home/ironman/WebstormProjects/hospital_react/src/components/searchDoc/index.js":"20","/home/ironman/WebstormProjects/hospital_react/src/components/searchAmbulance/index.js":"21","/home/ironman/WebstormProjects/hospital_react/src/components/adminProfile/index.js":"22","/home/ironman/WebstormProjects/hospital_react/src/components/diseasPrediction/index.js":"23","/home/ironman/WebstormProjects/hospital_react/src/components/expert/index.js":"24","/home/ironman/WebstormProjects/hospital_react/src/components/general/index.js":"25","/home/ironman/WebstormProjects/hospital_react/src/components/healthTips/index.js":"26","/home/ironman/WebstormProjects/hospital_react/src/components/coronaTest/index.js":"27","/home/ironman/WebstormProjects/hospital_react/src/routes/navLinks.js":"28"},{"size":817,"mtime":1608479061441,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1607060110431,"results":"31","hashOfConfig":"30"},{"size":2385,"mtime":1607758554681,"results":"32","hashOfConfig":"30"},{"size":583,"mtime":1607159243186,"results":"33","hashOfConfig":"30"},{"size":11467,"mtime":1607876315618,"results":"34","hashOfConfig":"30"},{"size":668,"mtime":1607534975488,"results":"35","hashOfConfig":"30"},{"size":84,"mtime":1607526990663,"results":"36","hashOfConfig":"30"},{"size":3840,"mtime":1608445280025,"results":"37","hashOfConfig":"30"},{"size":3187,"mtime":1607534978791,"results":"38","hashOfConfig":"30"},{"size":8857,"mtime":1607758684632,"results":"39","hashOfConfig":"30"},{"size":440,"mtime":1607696079635,"results":"40","hashOfConfig":"30"},{"size":282,"mtime":1607697011965,"results":"41","hashOfConfig":"30"},{"size":222,"mtime":1607157665990,"results":"42","hashOfConfig":"30"},{"size":213,"mtime":1607157600555,"results":"43","hashOfConfig":"30"},{"size":211,"mtime":1607697307689,"results":"44","hashOfConfig":"30"},{"size":2794,"mtime":1608481831482,"results":"45","hashOfConfig":"30"},{"size":59,"mtime":1607872442073,"results":"46","hashOfConfig":"30"},{"size":149,"mtime":1607693835749,"results":"47","hashOfConfig":"30"},{"size":438,"mtime":1607758349684,"results":"48","hashOfConfig":"30"},{"size":69,"mtime":1607761562211,"results":"49","hashOfConfig":"30"},{"size":81,"mtime":1607761590740,"results":"50","hashOfConfig":"30"},{"size":75,"mtime":1607872381388,"results":"51","hashOfConfig":"30"},{"size":3584,"mtime":1608481693975,"results":"52","hashOfConfig":"30"},{"size":63,"mtime":1607872904176,"results":"53","hashOfConfig":"30"},{"size":65,"mtime":1607872865848,"results":"54","hashOfConfig":"30"},{"size":71,"mtime":1607872787657,"results":"55","hashOfConfig":"30"},{"size":71,"mtime":1607872759678,"results":"56","hashOfConfig":"30"},{"size":1807,"mtime":1608375100131,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"vw465x",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},"/home/ironman/WebstormProjects/hospital_react/src/index.js",[],["122","123"],"/home/ironman/WebstormProjects/hospital_react/src/reportWebVitals.js",[],"/home/ironman/WebstormProjects/hospital_react/src/App.js",["124","125","126"],"// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import Details from \"./components/details/Details\";\n// import NotFound from \"./components/notFound/NotFound\";\n// import { createStore } from \"redux\";\n// import allReducer from \"./redux/reducers/\";\n// import { Provider } from \"react-redux\";\n// import { SnackbarProvider } from \"notistack\";\nimport LoadingView from \"./utils/Loading\";\n// import logged from \"./redux/reducers/isLogged\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { logIn, logOut, increase, decrease } from \"../../redux/actions\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"./fire\";\nimport AfterLoginRoute from \"./routes/AfterLoginRoute\";\nimport BeforeLoginRoute from \"./routes/BeforeLoginRoute\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startLoading, stopLoading } from \"./redux/actions\";\nimport IconView from \"./utils/IconView\";\n\n// const store = createStore(allReducer);\n\n// // Can still subscribe to the store\n// store.subscribe(() => console.log(store.getState()));\n\n// function App() {\n//   return (\n//     <Provider store={store}>\n//       <SnackbarProvider maxSnack={3}>\n//         <Router>\n//           <Switch>\n//             <Route component={Details} path=\"/Details\" />\n//             <Route component={Home} path=\"/\" exact />\n//             <Route component={NotFound} />\n//           </Switch>\n//         </Router>\n//       </SnackbarProvider>\n//     </Provider>\n//   );\n// }\nfunction App(props) {\n  const [isLoggedIn, setLoggedIn] = useState(0);\n  const isLoading = useSelector((state) => state.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      //stop loading\n      dispatch(stopLoading());\n      // route\n      if (user) {\n        let uid = user.uid;\n        console.log(`user logged in, user id: ${uid}`);\n        setLoggedIn(1);\n      } else {\n        console.log(\"user not logged in\");\n        setLoggedIn(-1);\n      }\n    });\n  }, []);\n\n  const renderRoute = () => {\n    switch (isLoggedIn) {\n      case 0:\n        return <IconView />;\n      case 1:\n        return <AfterLoginRoute />;\n      case -1:\n        return <BeforeLoginRoute />;\n    }\n  };\n\n  return (\n    <div>\n      {isLoading && <LoadingView />}\n      {renderRoute()}\n    </div>\n  );\n}\n\nexport default App;\n","/home/ironman/WebstormProjects/hospital_react/src/fire.js",[],"/home/ironman/WebstormProjects/hospital_react/src/routes/AfterLoginRoute.js",["127","128"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NotFound from \"../components/notFound/NotFound\";\nimport Home from \"../components/home/\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme, fade } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport diseasPrediction from \"../components/diseasPrediction/\";\nimport searchDoc from \"../components/searchDoc/index\";\nimport searchAmbulance from \"../components/searchAmbulance/index\";\nimport adminProfile from \"../components/adminProfile/index\";\nimport expert from \"../components/expert/index\";\nimport general from \"../components/general/index\";\nimport healthTips from \"../components/healthTips/index\";\nimport coronaTest from \"../components/coronaTest/index\";\nimport NavLinks from \"./navLinks\";\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function AfterLoginRoute() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Deases prediction\n            </Typography>\n\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <NavLinks type=\"ADMIN\" />\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          <Switch>\n            <Route component={Home} path=\"/\" exact />\n            <Route component={diseasPrediction} path=\"/diseasPrediction\" />\n            <Route component={searchDoc} path=\"/searchDoc\" />\n            <Route component={searchAmbulance} path=\"/searchAmbulance\" />\n            <Route component={adminProfile} path=\"/adminProfile\" />\n\n            <Route component={expert} path=\"/expert\" />\n            <Route component={general} path=\"/general\" />\n            <Route component={healthTips} path=\"/healthTips\" />\n            <Route component={coronaTest} path=\"/coronaTest\" />\n\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","/home/ironman/WebstormProjects/hospital_react/src/routes/BeforeLoginRoute.js",["129"],"import Login from \"../components/login/Login\";\nimport CreateAccount from \"../components/login/CreateAccount\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NotFound from \"../components/notFound/NotFound\";\nimport ForgatePassword from \"../components/login/ForgatePassword\";\n\nfunction BeforeLoginRoute() {\n  return (\n    <Router>\n      <Switch>\n        <Route component={CreateAccount} path=\"/signUp\" />\n        <Route component={ForgatePassword} path=\"/resetPass\" />\n        <Route component={Login} path=\"/\" exact />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default BeforeLoginRoute;\n","/home/ironman/WebstormProjects/hospital_react/src/components/notFound/NotFound.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/login/Login.js",["130"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../../fire\";\nimport { useState } from \"react\";\nimport { withSnackbar } from \"notistack\";\n\nfunction Login(props) {\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginCall = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        props.enqueueSnackbar(\"Login successfull\", {\n          variant: \"success\",\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        props.enqueueSnackbar(errorMessage, {\n          variant: \"error\",\n        });\n\n        props.enqueueSnackbar(\"Login failed\", {\n          variant: \"error\",\n        });\n      });\n  };\n\n  const validateInput = (e) => {\n    e.preventDefault();\n    if (!(email && password)) {\n      props.enqueueSnackbar(\"Please enter password and email\", {\n        variant: \"error\",\n      });\n    } else {\n      loginCall();\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            value={email}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            value={password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={validateInput}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/resetPass\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signUp\" variant=\"body2\">\n                Or Create new account\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nexport default withSnackbar(Login);\n","/home/ironman/WebstormProjects/hospital_react/src/components/login/ForgatePassword.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/login/CreateAccount.js",["131"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withSnackbar } from \"notistack\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n//firebase\nimport { signUp } from \"../database\";\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startLoading, stopLoading } from \"../../redux/actions\";\n\nfunction CreateAccount(props) {\n  const isLoading = useSelector((state) => state.isLoading);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [age, setAge] = React.useState(0);\n  const [gender, setGender] = React.useState(\"MALE\");\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [passwordAgain, setPasswordAgain] = React.useState(\"\");\n  const [termsAndCondition, setTermsAndCondition] = React.useState(false);\n\n  const createAccountCall = () => {\n    dispatch(startLoading());\n    signUp(\n      email,\n      password,\n      {\n        name,\n        email,\n        location,\n        age,\n        gender,\n        phoneNumber,\n      },\n      () => {\n        dispatch(stopLoading());\n        props.enqueueSnackbar(\"Created a new account!\", {\n          variant: \"success\",\n        });\n      },\n      (error) => {\n        props.enqueueSnackbar(error, {\n          variant: \"error\",\n        });\n      }\n    );\n  };\n\n  const validateInputs = (e) => {\n    e.preventDefault();\n    console.log(\n      ` name: ${name}\\n email: ${email}\\n loaction: ${location}\\n age: ${age}\\n gender: ${gender}\\n phoneNumber: ${phoneNumber}\\n password: ${password}\\n passwordAgain: ${passwordAgain}\\n terms & condi: ${termsAndCondition}`\n    );\n\n    if (!termsAndCondition) {\n      props.enqueueSnackbar(\n        \"You have to accept terms and condition in order to use our web\",\n        {\n          variant: \"error\",\n        }\n      );\n      return;\n    }\n\n    if (\n      name &&\n      email &&\n      location &&\n      age &&\n      gender &&\n      phoneNumber &&\n      password &&\n      passwordAgain\n    ) {\n      if (passwordAgain === password) {\n        createAccountCall();\n      } else {\n        props.enqueueSnackbar(\"Password didn't match up\", {\n          variant: \"success\",\n        });\n      }\n    } else {\n      props.enqueueSnackbar(\"Please enter everything\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Name\"\n                autoComplete=\"name\"\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n                value={name}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n                value={email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Location\"\n                onChange={(event) => {\n                  setLocation(event.target.value);\n                }}\n                value={location}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Age\"\n                type=\"number\"\n                onChange={(event) => {\n                  setAge(event.target.value);\n                }}\n                value={age}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                select\n                label=\"Gender\"\n                required\n                fullWidth\n                value={gender}\n                onChange={(event) => {\n                  setGender(event.target.value);\n                }}\n                helperText=\"Please select your \"\n              >\n                {genders.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}{\" \"}\n                  </MenuItem>\n                ))}{\" \"}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">+88</InputAdornment>\n                  ),\n                }}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Phone number\"\n                onChange={(event) => {\n                  setPhoneNumber(event.target.value);\n                }}\n                value={phoneNumber}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                value={password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                onChange={(event) => {\n                  setPasswordAgain(event.target.value);\n                }}\n                value={passwordAgain}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                required\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    checked={termsAndCondition}\n                    onChange={(event) => {\n                      setTermsAndCondition(event.target.checked);\n                    }}\n                  />\n                }\n                label=\"I agree all terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={validateInputs}\n          >\n            Create account\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Login\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst genders = [\n  {\n    value: \"MALE\",\n    label: \"male\",\n  },\n  {\n    value: \"FEMALE\",\n    label: \"female\",\n  },\n  {\n    value: \"OTHER\",\n    label: \"other\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default withSnackbar(CreateAccount);\n","/home/ironman/WebstormProjects/hospital_react/src/redux/actions/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/counter.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLogged.js",[],"/home/ironman/WebstormProjects/hospital_react/src/redux/reducers/isLoading.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/database/index.js",["132","133","134"],"/home/ironman/WebstormProjects/hospital_react/src/components/home/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/utils/Loading.js",[],"/home/ironman/WebstormProjects/hospital_react/src/utils/IconView.js",["135"],"export default function IconView() {\n  const centering = {\n    display: \"flex\",\n    justifyContent: \"center\" /* align horizontal */,\n    alignItems: \"center\" /* align vertical */,\n    height: \"95vh\",\n    width: \"100%\",\n  };\n  return (\n    <div style={centering}>\n      <img src=\"https://www.gstatic.com/devrel-devsite/prod/vf7e3a995d426e05d42b78fc7d21a14329a91016dc065dc22c480cc8f443ef33e/firebase/images/lockup.png\" />\n    </div>\n  );\n}\n","/home/ironman/WebstormProjects/hospital_react/src/components/searchDoc/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/searchAmbulance/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/adminProfile/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/diseasPrediction/index.js",["136","137","138","139","140","141"],"/home/ironman/WebstormProjects/hospital_react/src/components/expert/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/general/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/healthTips/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/components/coronaTest/index.js",[],"/home/ironman/WebstormProjects/hospital_react/src/routes/navLinks.js",["142","143","144","145","146"],"import FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles, useTheme, fade } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport React from \"react\";\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n  const CustomLink = React.useMemo(\n    () =>\n      React.forwardRef((linkProps, ref) => (\n        <Link  ref={ref} to={to} {...linkProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem  button component={CustomLink}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nexport default function NavLinks(porps) {\n  return (\n    <List>\n      <ListItemLink icon={<HomeIcon />} primary=\"Home\" to=\"/\" />\n\n      <ListItemLink\n        icon={<FavoriteIcon />}\n        primary=\"Diseas Prediction\"\n        to=\"/diseasPrediction\"\n      />\n      <ListItemLink\n        icon={<LocalHospitalIcon />}\n        primary=\"Search Doctor\"\n        to=\"/searchDoc\"\n      />\n      <ListItemLink\n        icon={<SearchIcon />}\n        primary=\"Search Ambulance\"\n        to=\"/searchAmbulance\"\n      />\n\n      {porps.type === \"ADMIN\" && (\n        <ListItemLink\n          icon={<PersonIcon />}\n          primary=\"Admin Profile\"\n          to=\"/adminProfile\"\n        />\n      )}\n    </List>\n  );\n}",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":17,"column":10,"nodeType":"153","messageId":"154","endLine":17,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":59,"column":6,"nodeType":"157","endLine":59,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":62,"column":5,"nodeType":"161","messageId":"162","endLine":69,"endColumn":6},{"ruleId":"151","severity":1,"message":"163","line":19,"column":8,"nodeType":"153","messageId":"154","endLine":19,"endColumn":17},{"ruleId":"164","severity":1,"message":"165","line":108,"column":3,"nodeType":"166","messageId":"167","endLine":108,"endColumn":13},{"ruleId":"151","severity":1,"message":"168","line":3,"column":50,"nodeType":"153","messageId":"154","endLine":3,"endColumn":54},{"ruleId":"151","severity":1,"message":"169","line":32,"column":13,"nodeType":"153","messageId":"154","endLine":32,"endColumn":22},{"ruleId":"151","severity":1,"message":"170","line":24,"column":9,"nodeType":"153","messageId":"154","endLine":24,"endColumn":18},{"ruleId":"151","severity":1,"message":"169","line":19,"column":11,"nodeType":"153","messageId":"154","endLine":19,"endColumn":20},{"ruleId":"151","severity":1,"message":"171","line":68,"column":7,"nodeType":"153","messageId":"154","endLine":68,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":78,"column":36,"nodeType":"174","messageId":"175","endLine":78,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":11,"column":7,"nodeType":"178","endLine":11,"endColumn":157},{"ruleId":"151","severity":1,"message":"179","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":18},{"ruleId":"151","severity":1,"message":"180","line":3,"column":20,"nodeType":"153","messageId":"154","endLine":3,"endColumn":29},{"ruleId":"151","severity":1,"message":"181","line":5,"column":3,"nodeType":"153","messageId":"154","endLine":5,"endColumn":21},{"ruleId":"151","severity":1,"message":"182","line":16,"column":7,"nodeType":"153","messageId":"154","endLine":16,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":54,"column":43,"nodeType":"185","messageId":"167","endLine":54,"endColumn":45},{"ruleId":"172","severity":1,"message":"186","line":59,"column":43,"nodeType":"174","messageId":"187","endLine":59,"endColumn":45},{"ruleId":"151","severity":1,"message":"188","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":15},{"ruleId":"151","severity":1,"message":"189","line":10,"column":10,"nodeType":"153","messageId":"154","endLine":10,"endColumn":20},{"ruleId":"151","severity":1,"message":"190","line":10,"column":22,"nodeType":"153","messageId":"154","endLine":10,"endColumn":30},{"ruleId":"151","severity":1,"message":"191","line":10,"column":32,"nodeType":"153","messageId":"154","endLine":10,"endColumn":36},{"ruleId":"151","severity":1,"message":"192","line":12,"column":16,"nodeType":"153","messageId":"154","endLine":12,"endColumn":23},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'startLoading' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["195"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'InboxIcon' is defined but never used.","no-dupe-keys","Duplicate key 'menuButton'.","ObjectExpression","unexpected","'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'checkIfSymptomExist' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'getDiseasesListRef' is defined but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Divider' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'fade' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},[2047,2049],"[dispatch]"]